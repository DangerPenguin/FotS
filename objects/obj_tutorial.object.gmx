<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_space) || keyboard_check_pressed(vk_enter) ){
    audio_play_sound( snd_select, 0, false );
    room_goto( rm_game );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color( c_white );
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_alpha(1.0);  

half_width = room_width * 0.5;

draw_set_font(fnt_PressStart_small);

draw_text(half_width, 20, "Kid, you're our only hope,");
draw_text(half_width, 40, "so here's how the ship works.");

draw_text(half_width, 70, "W-A-S-D moves your ship,");
draw_text(half_width, 90, "try not to hit anything!");

draw_sprite_stretched( spr_ship_classic, 0, 170, 120, 32, 32);
draw_sprite(spr_enemy_shot, 0, 220, 120);

draw_sprite_stretched( spr_ship_classic, 0, 400, 120, 32, 32);
draw_sprite_stretched( spr_enemy_ship_classic, 0, 450, 130, 32, 32);

draw_text(half_width, 190, "The ship charges for 10 seconds, and you");
draw_text(half_width, 210, "get ONE shot (Space) before recharging.");

draw_partial_circle(128, 260+16, 32, 0, 225, c_white, c_gray, 0.7, 0.2);
//draw_partial_circle(256, 260+16, 32, 0, 225, c_white, c_gray, 0.7, 0.2);
//draw_partial_circle(384, 260+16, 32, 0, 360, c_white, c_gray, 0.7, 0.2);

draw_sprite_stretched( spr_ship_classic, 0, 128-16, 260, 32, 32);
//draw_sprite_stretched( spr_ship_classic, 0, 256-16, 260, 32, 32);
draw_sprite_stretched( spr_ship_classic, 0, 280-16, 260, 32, 32);
//draw_sprite_stretched( spr_ship_classic, 0, 384-16, 260, 32, 32);
draw_sprite_stretched( spr_ship_classic, 0, 512-16, 260, 32, 32);

draw_healthbar(280 - 16, 260 + 36, 280 + 16, 260 + 40, (225/360) * 100, c_gray, c_yellow, c_yellow, 0, 1, 0 );

draw_sprite_stretched( spr_wave, 0, 512-45, 260-30, 90, 90);

//draw_set_font(fnt_PressStart_ex_small);
draw_text( 210, 280, "OR");
draw_set_font(fnt_PressStart_small);

draw_text(half_width, 340, "Everything is worth points,");
draw_text(half_width, 360, "even staying alive!");

draw_sprite(spr_health, 0, half_width - 8, 400);

draw_text(half_width, 440, "Press Space to Play!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
