<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_classic</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 2.0;
image_yscale = 2.0;
playerSpeed = 6;
max_hp = 4;
hp = max_hp;
hurt = false;
hurt_timer = 30;

recharge = 1;

global.score = 0;

instance_create( 0, 0, obj_player_gui );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>half_width = sprite_width/2.0;

if (x &lt; half_width){
    x = half_width;
} else if (x &gt; room_width - half_width) {
    x = room_width - half_width;
}

if ( y &lt; half_width) {
    y = half_width;
} else if ( y &gt; room_height - half_width) {
    y = room_height - half_width;
}

if ( hurt ) {
    hurt_timer -= 1;
    
    view_xview[0] = -2 + random(4);
    view_yview[0] = -2 + random(4);
    
    if(hurt_timer &lt;= 0){
        hurt_timer = 30;
        hurt = false;
        view_xview[0] = 0;
        view_yview[0] = 0;
    }
}

if ( recharge &lt; 360 ){
    //recharge += 0.4; //for 30-sec charge
    //recharge += 0.8; //for 15-sec charge
    recharge += 1.2;
    
    if ( recharge &gt;= 360 ){
        recharge = 360;
    }
}

global.score += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp += 1;
if (hp &gt; max_hp){
    hp = max_hp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( !hurt ){
    hp -= 1;

    x_diff = x - other.x;
    y_diff = y - other.y;

    x += x_diff / 2.0;
    y += y_diff / 2.0;
    
    hurt = true;
    
    if(hp &lt;= 0){
        kill_player();
    }
}

spawn_debris(x, y, round(3 + random(3)));
reset_multiplier();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( !hurt ){
    hp -= 1;

    x_diff = x - other.x;
    y_diff = y - other.y;

    x += x_diff / 2.0;
    y += y_diff / 2.0;
    
    hurt = true;
    
    if(hp &lt;= 0){
        kill_player();
    }
}

spawn_debris(x, y, round(3 + random(3)));
reset_multiplier();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angle = round( recharge );
//draw_text(x + 20, y + 20, angle);
if(webgl_enabled) {
    draw_partial_circle(x, y, 32, 0, angle, c_white, c_gray, 0.7, 0.2);
} else {
    draw_healthbar(x - 16, y + 20, x + 16, y + 24, (angle/360) * 100, c_gray, c_yellow, c_yellow, 0, 1, 0 );
}



if ( hurt ){
    if ( (hurt_timer mod 6) &gt; 3 ) {
        draw_self();
    }
} else {
    draw_self();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
